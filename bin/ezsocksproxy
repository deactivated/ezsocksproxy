#!/usr/bin/env python

import re
import argparse
import socket

from ezsocksproxy import serve


def parse_addr(addr_str, default_addr=None, default_port=None):
    delimiter = addr_str.rfind(':')
    if delimiter >= 0:
        addr, port = addr_str[:delimiter], addr_str[delimiter + 1:]
    elif re.match("\d+$", addr_str):
        addr, port = default_addr, addr_str
    else:
        addr, port = addr_str, default_port

    if not port:
        raise ValueError("Invalid port: %r" % port)

    try:
        socket.getaddrinfo(addr, port)
    except socket.gaierror as e:
        raise ValueError("Invalid address: %s" % e)

    return (addr, int(port))


def main():
    description = "An EZProxy compatible interface to a SOCKS tunnel."
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument('socks_url', metavar="socks_addr:port",
                        help="Location of SOCKS proxy.")
    parser.add_argument('bind_url', metavar="[bind_addr:]port",
                        help="Bind address of EZProxy interface.")
    args = parser.parse_args()

    return serve(parse_addr(args.bind_url, default_addr='0.0.0.0'),
                 parse_addr(args.socks_url))


if __name__ == '__main__':
    main()
